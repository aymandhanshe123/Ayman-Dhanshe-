<!-- Product Grid Section -->
<div class="product-grid">
  <!-- Example product card (youâ€™ll render 6 like this from the customizer) -->
  <div class="product-card" 
       data-handle="white-cotton-shirt"> <!-- ðŸ‘ˆ product handle -->
    <img src="{{ product.featured_image | img_url: '400x' }}" alt="White Cotton Shirt">
    <h3>{{ product.title }}</h3>
    <button class="quick-view-btn">Quick View</button>
  </div>
</div>

<!-- Popup -->
<div id="product-popup" class="popup hidden">
  <div class="popup-content">
    <button id="close-popup">âœ–</button>
    <h2 id="popup-title"></h2>
    <p id="popup-price"></p>
    <p id="popup-desc"></p>

    <select id="variant-select"></select>

    <button id="add-to-cart">Add to Cart</button>
  </div>
</div>

<style>
.hidden { display: none; }
.popup { position: fixed; inset: 0; background: rgba(0,0,0,0.6); display: flex; justify-content: center; align-items: center; }
.popup-content { background: #fff; padding: 20px; border-radius: 10px; width: 400px; }
</style>

<script>
// Grab elements
const popup = document.getElementById("product-popup");
const popupTitle = document.getElementById("popup-title");
const popupPrice = document.getElementById("popup-price");
const popupDesc = document.getElementById("popup-desc");
const variantSelect = document.getElementById("variant-select");
const addToCartBtn = document.getElementById("add-to-cart");

// Open popup when "Quick View" clicked
document.querySelectorAll(".quick-view-btn").forEach(btn => {
  btn.addEventListener("click", async (e) => {
    const card = e.target.closest(".product-card");
    const handle = card.dataset.handle;

    // Fetch product JSON from Shopify
    const res = await fetch(`/products/${handle}.json`);
    const data = await res.json();

    const product = data.product;

    // Fill popup
    popupTitle.textContent = product.title;
    popupPrice.textContent = "â‚¹" + product.variants[0].price / 100;
    popupDesc.textContent = product.body_html.replace(/<[^>]+>/g, ""); // strip HTML

    // Fill variants
    variantSelect.innerHTML = "";
    product.variants.forEach(v => {
      const opt = document.createElement("option");
      opt.value = v.id;  // ðŸ‘ˆ variant ID
      opt.textContent = v.title + " - â‚¹" + v.price / 100;
      variantSelect.appendChild(opt);
    });

    // Store product in button dataset
    addToCartBtn.dataset.productTitle = product.title;

    popup.classList.remove("hidden");
  });
});

// Close popup
document.getElementById("close-popup").addEventListener("click", () => {
  popup.classList.add("hidden");
});

// Add to Cart
addToCartBtn.addEventListener("click", async () => {
  const variantId = variantSelect.value;

  // Normal add
  await fetch("/cart/add.js", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ id: variantId, quantity: 1 })
  });

  // Special rule: if "Black / Medium" is chosen â†’ also add "Soft Winter Jacket"
  const selectedText = variantSelect.options[variantSelect.selectedIndex].text.toLowerCase();
  if (selectedText.includes("black") && selectedText.includes("medium")) {
    await fetch("/cart/add.js", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ id: YOUR_SOFT_JACKET_VARIANT_ID, quantity: 1 })
    });
  }

  // Toast
  const toast = document.createElement("div");
  toast.innerHTML = `âœ… Added to cart! <a href="/cart" style="color:blue; text-decoration:underline;">View Cart</a>`;
  toast.style.position = "fixed";
  toast.style.bottom = "20px";
  toast.style.right = "20px";
  toast.style.background = "#333";
  toast.style.color = "#fff";
  toast.style.padding = "12px 16px";
  toast.style.borderRadius = "6px";
  toast.style.zIndex = "9999";
  document.body.appendChild(toast);
  setTimeout(() => toast.remove(), 4000);

  popup.classList.add("hidden");
});
</script>
