{% schema %}
{
  "name": "Custom Product Grid",
  "settings": [],
  "blocks": [
    {
      "type": "product",
      "name": "Product",
      "settings": [
        {
          "type": "product",
          "id": "product",
          "label": "Select Product"
        }
      ]
    }
  ],
  "max_blocks": 6,
  "presets": [
    {
      "name": "Custom Product Grid",
      "category": "Custom"
    }
  ]
}
{% endschema %}

<section class="custom-grid">
  <div class="custom-grid__wrapper">
    {% for block in section.blocks %}
      {% assign product = all_products[block.settings.product] %}
      {% if product %}
      <div class="custom-grid__item" data-product-handle="{{ product.handle }}">
        <img src="{{ product.featured_image | image_url: width: 600 }}" alt="{{ product.title }}">
        <h3>{{ product.title }}</h3>
        <p>{{ product.price | money }}</p>
        <button class="open-popup" data-handle="{{ product.handle }}">View</button>
      </div>
      {% endif %}
    {% endfor %}
  </div>
</section>

<!-- Popup -->
<div id="product-popup" class="popup hidden">
  <div class="popup-content">
    <button class="popup-close">×</button>
    <div id="popup-body"></div>
  </div>
</div>

<style>
.custom-grid__wrapper {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: 30px;
}
.custom-grid__item {
  background: #fff;
  border: 1px solid #eee;
  padding: 20px;
  text-align: center;
  transition: transform .3s ease;
}
.custom-grid__item:hover {
  transform: translateY(-5px);
}
.popup {
  position: fixed;
  inset: 0;
  background: rgba(0,0,0,0.7);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 99;
}
.popup.hidden { display: none; }
.popup-content {
  background: #fff;
  padding: 30px;
  max-width: 600px;
  width: 100%;
  position: relative;
  border-radius: 8px;
}
.popup-close {
  position: absolute;
  top: 10px;
  right: 10px;
  font-size: 22px;
  border: none;
  background: none;
  cursor: pointer;
}
</style>

<script>
document.addEventListener("DOMContentLoaded", () => {
  const popup = document.getElementById("product-popup");
  const popupBody = document.getElementById("popup-body");

  document.querySelectorAll(".open-popup").forEach(btn => {
    btn.addEventListener("click", async () => {
      const handle = btn.dataset.handle;
      const res = await fetch(`/products/${handle}.js`);
      const product = await res.json();

      let variantsHtml = product.variants.map(v => 
        `<option value="${v.id}">${v.title} - ${Shopify.formatMoney(v.price)}</option>`
      ).join("");

      popupBody.innerHTML = `
        <h2>${product.title}</h2>
        <p>${Shopify.formatMoney(product.price)}</p>
        <p>${product.description}</p>
        <select id="variant-select">${variantsHtml}</select>
        <button id="add-to-cart">Add to Cart</button>
      `;

      popup.classList.remove("hidden");

      document.getElementById("add-to-cart").onclick = async () => {
        const variantId = document.getElementById("variant-select").value;
        
        await fetch("/cart/add.js", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ id: variantId, quantity: 1 })
        });

        // Bonus condition → also add "Soft Winter Jacket"
        const variantText = document.getElementById("variant-select").selectedOptions[0].text;
        if(variantText.includes("Black") && variantText.includes("Medium")){
          const res2 = await fetch(`/products/soft-winter-jacket.js`);
          const swj = await res2.json();
          await fetch("/cart/add.js", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ id: swj.variants[0].id, quantity: 1 })
          });
        }

        alert("Added to cart!");
      };
    });
  });

  document.querySelector(".popup-close").addEventListener("click", () => {
    popup.classList.add("hidden");
  });
});
</script>
