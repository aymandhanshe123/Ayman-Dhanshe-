<style>
/* Grid responsive */
.custom-product-grid .grid-container {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: 20px;
  max-width: 1200px;
  margin: auto;
  padding: 20px;
}
.product-card {
  cursor: pointer;
  position: relative;
  background: #fff;
  overflow: hidden;
  border: 1px solid #eee;
  transition: transform 0.3s ease;
}
.product-card:hover {
  transform: translateY(-5px);
}
.product-card img {
  width: 100%;
  height: auto;
  object-fit: cover;
}
.product-info {
  padding: 15px;
  text-align: center;
}
.product-title {
  font-size: 1.1rem;
  font-weight: 500;
  margin: 0 0 5px;
}
.product-price {
  font-size: 1rem;
  font-weight: 400;
}

/* Modal */
.product-modal.hidden { display: none; }
.product-modal .modal-overlay {
  position: fixed;
  inset: 0;
  background: rgba(0,0,0,0.5);
  z-index: 1000;
}
.product-modal .modal-content {
  position: fixed;
  top: 50%; left: 50%;
  transform: translate(-50%,-50%);
  background: #fff;
  padding: 20px;
  max-width: 90%;
  width: 600px;
  border-radius: 8px;
  z-index: 1001;
}
.modal-close {
  position: absolute;
  top: 10px; right: 10px;
  background: none; border: none;
  font-size: 24px; cursor: pointer;
}
.modal-body {
  display: flex;
  flex-wrap: wrap;
  gap: 20px;
}
.modal-image img {
  max-width: 180px;
  border: 1px solid #ddd;
}
.modal-details {
  flex: 1;
  min-width: 200px;
}
.modal-details h2 {
  font-size: 20px; margin: 0 0 10px;
}
.variant-options {
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
  margin: 10px 0;
}
.variant-options button {
  border: 1px solid #000;
  background: #fff;
  padding: 5px 15px;
  cursor: pointer;
}
.variant-options button.active {
  background: #000; color: #fff;
}
.add-to-cart-btn {
  margin-top: 15px;
  width: 100%;
  background: #000;
  color: #fff;
  padding: 12px;
  font-size: 16px;
  border: none;
  cursor: pointer;
}
.add-to-cart-btn:hover {
  background: #333;
}

/* Mobile adjustments */
@media (max-width: 768px) {
  .modal-body {
    flex-direction: column;
    align-items: center;
  }
  .modal-image img {
    max-width: 100%;
  }
}
</style>

<script>
document.addEventListener("click", (e) => {
  const card = e.target.closest(".product-card");
  const modal = document.querySelector(".product-modal");
  const modalImage = document.getElementById("modal-product-image");
  const modalTitle = document.getElementById("modal-product-title");
  const modalPrice = document.getElementById("modal-product-price");
  const modalDesc = document.getElementById("modal-product-desc");
  const modalColors = document.getElementById("modal-colors");
  const modalSizes = document.getElementById("modal-sizes");

  // Open modal
  if (card) {
    fetch(`/products/${card.dataset.handle}.js`)
      .then(res => res.json())
      .then(product => {
        modalImage.src = product.images[0];
        modalTitle.textContent = product.title;
        modalPrice.textContent = Shopify.formatMoney(product.price);
        modalDesc.innerHTML = product.description;

        // Colors
        modalColors.innerHTML = "";
        const colors = [...new Set(product.variants.map(v => v.option1))];
        colors.forEach(color => {
          const btn = document.createElement("button");
          btn.textContent = color;
          btn.onclick = () => {
            document.querySelectorAll("#modal-colors button").forEach(b => b.classList.remove("active"));
            btn.classList.add("active");
            modalSizes.innerHTML = "";
            product.variants.filter(v => v.option1 === color).forEach(v => {
              const opt = document.createElement("option");
              opt.value = v.id;
              opt.textContent = v.option2 || "One Size";
              modalSizes.appendChild(opt);
            });
          };
          modalColors.appendChild(btn);
        });

        modal.classList.remove("hidden");
      });
  }

  // Close modal
  if (e.target.classList.contains("modal-close") || e.target.classList.contains("modal-overlay")) {
    modal.classList.add("hidden");
  }
});

// AJAX Add to Cart
document.getElementById("add-to-cart-form").addEventListener("submit", e => {
  e.preventDefault();
  const modalSizes = document.getElementById("modal-sizes");
  const formData = { id: modalSizes.value, quantity: 1 };
  fetch("/cart/add.js", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify(formData)
  })
  .then(res => res.json())
  .then(() => {
    alert("Added to cart!");
    document.querySelector(".product-modal").classList.add("hidden");
  });
});
</script>
