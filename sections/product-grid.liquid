{% comment %}
Custom Product Grid Section with Popup + Dynamic Variants
{% endcomment %}

<section class="custom-product-grid" style="padding:60px 20px;">
  {% if section.settings.heading != blank %}
    <h2 style="text-align:center; margin-bottom:30px;">
      {{ section.settings.heading }}
    </h2>
  {% endif %}

  <div class="product-grid">
    {% for product in collections[section.settings.collection].products limit: section.settings.products_to_show %}
      <div class="product-card" 
           data-product='{{ product | json | escape }}'>
        <img src="{{ product.featured_image | image_url: width: 400 }}" alt="{{ product.title }}">
        <h3>{{ product.title }}</h3>
        <p>{{ product.price | money }}</p>
      </div>
    {% else %}
      <p>No products found in this collection.</p>
    {% endfor %}
  </div>

  <!-- Popup Modal -->
  <div id="productModal" class="modal">
    <div class="modal-content">
      <span class="close">&times;</span>
      <div class="modal-body">
        <img id="modalImage" src="" alt="" />
        <h3 id="modalTitle"></h3>
        <p id="modalPrice"></p>
        <p id="modalDescription"></p>

        <!-- Variant Selector -->
        <div id="variantSelectors"></div>

        <button class="add-to-cart" id="addToCartBtn">Add to Cart â†’</button>
      </div>
    </div>
  </div>
</section>

<style>
.product-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 20px;
}
.product-card {
  border:1px solid #ddd;
  border-radius:12px;
  padding:10px;
  text-align:center;
  cursor:pointer;
  transition: 0.3s;
}
.product-card:hover {
  transform: scale(1.03);
}
.product-card img {
  width:100%;
  border-radius:8px;
}

/* Responsive */
@media(max-width:1024px) {
  .product-grid { grid-template-columns: repeat(2, 1fr); }
}
@media(max-width:600px) {
  .product-grid { grid-template-columns: 1fr; }
}

/* Popup Modal */
.modal {
  display: none;
  position: fixed;
  z-index: 9999;
  left:0; top:0;
  width:100%; height:100%;
  background: rgba(0,0,0,0.6);
  justify-content: center;
  align-items: center;
}
.modal-content {
  background:#fff;
  padding:20px;
  border-radius:12px;
  max-width:400px;
  width:90%;
  position:relative;
}
.modal-content img {
  width:100%;
  border-radius:8px;
  margin-bottom:15px;
}
.close {
  position:absolute;
  top:10px; right:15px;
  font-size:22px;
  cursor:pointer;
}
.add-to-cart {
  display:block;
  width:100%;
  margin-top:15px;
  padding:12px;
  background:#000;
  color:#fff;
  border:none;
  border-radius:8px;
  cursor:pointer;
}
</style>

<script>
let currentProduct = null;
let selectedVariantId = null;

document.querySelectorAll(".product-card").forEach(card => {
  card.addEventListener("click", () => {
    const product = JSON.parse(card.dataset.product);
    currentProduct = product;

    // Fill modal
    document.getElementById("modalImage").src = product.featured_image.src;
    document.getElementById("modalTitle").textContent = product.title;
    document.getElementById("modalPrice").textContent = Shopify.formatMoney(product.price);
    document.getElementById("modalDescription").textContent = product.body_html.replace(/<[^>]+>/g, '').slice(0, 150);

    // Build variant selectors
    const variantSelectors = document.getElementById("variantSelectors");
    variantSelectors.innerHTML = "";

    if (product.variants.length > 1) {
      const select = document.createElement("select");
      select.id = "variantSelect";
      product.variants.forEach(variant => {
        const option = document.createElement("option");
        option.value = variant.id;
        option.textContent = variant.title + " - " + Shopify.formatMoney(variant.price);
        select.appendChild(option);
      });
      variantSelectors.appendChild(select);
      selectedVariantId = product.variants[0].id;
      select.addEventListener("change", (e) => {
        selectedVariantId = e.target.value;
      });
    } else {
      selectedVariantId = product.variants[0].id;
    }

    document.getElementById("productModal").style.display = "flex";
  });
});

document.querySelector(".close").addEventListener("click", () => {
  document.getElementById("productModal").style.display = "none";
});

window.addEventListener("click", (e) => {
  if (e.target.id === "productModal") {
    document.getElementById("productModal").style.display = "none";
  }
});

// Add to cart
document.getElementById("addToCartBtn").addEventListener("click", () => {
  if (!selectedVariantId) return alert("Please select a variant.");

  fetch("/cart/add.js", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ id: selectedVariantId, quantity: 1 })
  })
  .then(res => res.json())
  .then(data => {
    alert("Added to cart: " + data.title);
    document.getElementById("productModal").style.display = "none";
  })
  .catch(err => console.error(err));
});
</script>

{% schema %}
{
  "name": "Custom Product Grid",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Section Heading",
      "default": "Featured Products"
    },
    {
      "type": "collection",
      "id": "collection",
      "label": "Select Collection"
    },
    {
      "type": "range",
      "id": "products_to_show",
      "label": "Number of products",
      "min": 2,
      "max": 12,
      "step": 1,
      "default": 6
    }
  ],
  "presets": [
    {
      "name": "Custom Product Grid with Popup",
      "category": "Custom"
    }
  ]
}
{% endschema %}
