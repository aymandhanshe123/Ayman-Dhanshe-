{% comment %}
Custom Product Grid Section with Popup + Dynamic Variants + Add-to-Cart + Toast
{% endcomment %}

<section class="custom-product-grid" style="padding:60px 20px;">
  {% if section.settings.heading != blank %}
    <h2 style="text-align:center; margin-bottom:30px;">
      {{ section.settings.heading }}
    </h2>
  {% endif %}

  <div class="product-grid">
    {% for product in collections[section.settings.collection].products limit: section.settings.products_to_show %}
      <div class="product-card" 
           data-product='{{ product | json | escape }}'>
        <img src="{{ product.featured_image | image_url: width: 400 }}" 
             alt="{{ product.title }}">
        <h3>{{ product.title }}</h3>
        <p>{{ product.price | money }}</p>
      </div>
    {% else %}
      <p>No products found in this collection.</p>
    {% endfor %}
  </div>

  <!-- Popup Modal -->
  <div id="productModal" class="modal">
    <div class="modal-content">
      <span class="close">&times;</span>
      <div class="modal-body">
        <img id="modalImage" src="" alt="" />
        <h3 id="modalTitle"></h3>
        <p id="modalPrice"></p>
        <p id="modalDescription"></p>

        <div id="variantOptions"></div>

        <button class="add-to-cart">Add to Cart â†’</button>
      </div>
    </div>
  </div>

  <!-- Toast Notification -->
  <div id="toast" class="toast"></div>
</section>

<style>
.product-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 20px;
}
.product-card {
  border:1px solid #ddd;
  border-radius:12px;
  padding:10px;
  text-align:center;
  cursor:pointer;
  transition: 0.3s;
}
.product-card:hover { transform: scale(1.03); }
.product-card img {
  width:100%;
  border-radius:8px;
}

/* Responsive */
@media(max-width:1024px) {
  .product-grid { grid-template-columns: repeat(2, 1fr); }
}
@media(max-width:600px) {
  .product-grid { grid-template-columns: repeat(2, 1fr); }
}

/* Popup Modal */
.modal {
  display: none;
  position: fixed;
  z-index: 9999;
  left:0; top:0;
  width:100%; height:100%;
  background: rgba(0,0,0,0.6);
  justify-content: center;
  align-items: center;
}
.modal-content {
  background:#fff;
  padding:20px;
  border-radius:12px;
  max-width:400px;
  width:90%;
  position:relative;
}
.modal-content img {
  width:100%;
  border-radius:8px;
  margin-bottom:15px;
}
.close {
  position:absolute;
  top:10px; right:15px;
  font-size:22px;
  cursor:pointer;
}
.add-to-cart {
  display:block;
  width:100%;
  margin-top:15px;
  padding:12px;
  background:#000;
  color:#fff;
  border:none;
  border-radius:8px;
  cursor:pointer;
}

/* Toast Notification */
.toast {
  position: fixed;
  bottom: 20px;
  right: 20px;
  min-width: 280px;
  max-width: 340px;
  padding: 16px;
  background: #222;
  color: #fff;
  border-radius: 8px;
  display: none;
  align-items: center;
  justify-content: space-between;
  gap: 12px;
  animation: fadeIn 0.4s ease;
  z-index: 10000;
}
.toast.show { display: flex; }
.toast button {
  background: #fff;
  color: #000;
  border: none;
  padding: 6px 10px;
  border-radius: 4px;
  cursor: pointer;
}
@keyframes fadeIn {
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
}
</style>

<script>
let selectedVariantId = null;
let selectedOptions = {};

document.querySelectorAll(".product-card").forEach(card => {
  card.addEventListener("click", () => {
    const product = JSON.parse(card.dataset.product);

    document.getElementById("modalImage").src = product.featured_image.src;
    document.getElementById("modalTitle").textContent = product.title;
    document.getElementById("modalPrice").textContent = Shopify.formatMoney(product.price, "{{ shop.money_format }}");
    document.getElementById("modalDescription").textContent = product.body_html.replace(/<[^>]*>?/gm, '');

    const variantContainer = document.getElementById("variantOptions");
    variantContainer.innerHTML = "";

    product.options.forEach((opt, i) => {
      const div = document.createElement("div");
      div.innerHTML = `<label>${opt.name}</label>`;
      const select = document.createElement("select");
      select.dataset.index = i;
      product.options[i].values.forEach(val => {
        const option = document.createElement("option");
        option.value = val;
        option.textContent = val;
        select.appendChild(option);
      });
      div.appendChild(select);
      variantContainer.appendChild(div);

      select.addEventListener("change", e => {
        selectedOptions[i] = e.target.value;
        const matched = product.variants.find(v => {
          return v.options.every((optVal, idx) => optVal === (selectedOptions[idx] || product.options[idx].values[0]));
        });
        if (matched) {
          selectedVariantId = matched.id;
          document.getElementById("modalPrice").textContent = Shopify.formatMoney(matched.price, "{{ shop.money_format }}");
        }
      });
    });

    selectedVariantId = product.variants[0].id;
    document.getElementById("productModal").style.display = "flex";
  });
});

document.querySelector(".close").addEventListener("click", () => {
  document.getElementById("productModal").style.display = "none";
});

window.addEventListener("click", (e) => {
  if (e.target.id === "productModal") {
    document.getElementById("productModal").style.display = "none";
  }
});

// Add to cart functionality
document.querySelector(".add-to-cart").addEventListener("click", () => {
  if (!selectedVariantId) return;

  fetch("/cart/add.js", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ id: selectedVariantId, quantity: 1 })
  })
  .then(res => res.json())
  .then(data => {
    // Bonus: Add "Soft Winter Jacket" automatically if Black + Medium chosen
    if (selectedOptions[0] === "Black" && selectedOptions[1] === "M") {
      fetch("/cart/add.js", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ 
          id: {{ all_products['soft-winter-jacket'].variants.first.id }},
          quantity: 1 
        })
      });
    }

    showToast(`${data.title} added to cart`);
    document.getElementById("productModal").style.display = "none";
  })
  .catch(err => console.error("Error adding to cart:", err));
});

// Toast
function showToast(message) {
  const toast = document.getElementById("toast");
  toast.innerHTML = `
    <span>${message}</span>
    <button onclick="window.location='/cart'">View Cart</button>
  `;
  toast.classList.add("show");

  setTimeout(() => {
    toast.classList.remove("show");
  }, 4000);
}
</script>

{% schema %}
{
  "name": "Custom Product Grid",
  "settings": [
    { "type": "text", "id": "heading", "label": "Section Heading", "default": "Featured Products" },
    { "type": "collection", "id": "collection", "label": "Select Collection" },
    { "type": "range", "id": "products_to_show", "label": "Number of products", "min": 2, "max": 12, "step": 1, "default": 6 }
  ],
  "presets": [
    { "name": "Custom Product Grid with Popup", "category": "Custom" }
  ]
}
{% endschema %}
