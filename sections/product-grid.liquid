{% comment %}
Custom Product Grid Section
Pixel-perfect to Figma with modal popup & AJAX Add to Cart
{% endcomment %}

<section class="custom-product-grid">
  <div class="grid-container">
    {% for product in collections['frontpage'].products limit:6 %}
      <div class="product-card" data-handle="{{ product.handle }}">
        <div class="product-image">
          <img src="{{ product.featured_image | img_url: '600x600' }}" alt="{{ product.title }}">
        </div>
        <div class="product-info">
          <h3 class="product-title">{{ product.title }}</h3>
          <p class="product-price">{{ product.price | money }}</p>
        </div>
      </div>
    {% endfor %}
  </div>

  <!-- Modal -->
  <div class="product-modal hidden">
    <div class="modal-overlay"></div>
    <div class="modal-content">
      <button class="modal-close">×</button>
      <div class="modal-body">
        <div class="modal-image">
          <img id="modal-product-image" src="" alt="">
        </div>
        <div class="modal-details">
          <h2 id="modal-product-title"></h2>
          <p id="modal-product-price"></p>
          <p id="modal-product-desc"></p>

          <form id="add-to-cart-form">
            <label>Color</label>
            <div id="modal-colors" class="variant-options"></div>

            <label>Size</label>
            <select id="modal-sizes" name="id"></select>

            <button type="submit" class="add-to-cart-btn">
              ADD TO CART →
            </button>
          </form>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
/* Grid */
.custom-product-grid .grid-container {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 20px;
  max-width: 1920px;
  margin: auto;
}
.product-card {
  cursor: pointer;
  position: relative;
  background: #fff;
  width: 919px;
  height: 943px;
  overflow: hidden;
}
.product-card img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}
.product-info {
  position: absolute;
  bottom: 0;
  left: 0;
  background: rgba(255,255,255,0.9);
  padding: 20px;
}
.product-title {
  font-size: 22px;
  font-weight: 500;
  margin: 0 0 5px;
}
.product-price {
  font-size: 20px;
  font-weight: 400;
}

/* Modal */
.product-modal.hidden { display: none; }
.product-modal .modal-overlay {
  position: fixed;
  top: 0; left: 0;
  width: 100%; height: 100%;
  background: rgba(0,0,0,0.5);
}
.product-modal .modal-content {
  position: fixed;
  top: 50%; left: 50%;
  transform: translate(-50%,-50%);
  background: #fff;
  padding: 20px;
  max-width: 600px;
  width: 100%;
}
.modal-close {
  position: absolute;
  top: 10px; right: 10px;
  background: none; border: none;
  font-size: 24px; cursor: pointer;
}
.modal-body {
  display: flex;
  gap: 20px;
}
.modal-image img {
  width: 120px; height: auto;
}
.modal-details h2 {
  font-size: 20px; margin: 0 0 10px;
}
.variant-options {
  display: flex;
  gap: 10px;
  margin: 10px 0;
}
.variant-options button {
  border: 1px solid #000;
  background: #fff;
  padding: 5px 15px;
  cursor: pointer;
}
.variant-options button.active {
  background: #000; color: #fff;
}
.add-to-cart-btn {
  margin-top: 15px;
  width: 100%;
  background: #000;
  color: #fff;
  padding: 12px;
  font-size: 16px;
  border: none;
  cursor: pointer;
}
.add-to-cart-btn:hover {
  background: #333;
}
</style>

<script>
document.addEventListener("DOMContentLoaded", () => {
  const modal = document.querySelector(".product-modal");
  const modalImage = document.getElementById("modal-product-image");
  const modalTitle = document.getElementById("modal-product-title");
  const modalPrice = document.getElementById("modal-product-price");
  const modalDesc = document.getElementById("modal-product-desc");
  const modalColors = document.getElementById("modal-colors");
  const modalSizes = document.getElementById("modal-sizes");

  // Open modal
  document.querySelectorAll(".product-card").forEach(card => {
    card.addEventListener("click", () => {
      fetch(`/products/${card.dataset.handle}.js`)
        .then(res => res.json())
        .then(product => {
          modalImage.src = product.images[0];
          modalTitle.textContent = product.title;
          modalPrice.textContent = Shopify.formatMoney(product.price);
          modalDesc.textContent = product.description;

          // Colors
          modalColors.innerHTML = "";
          const colors = [...new Set(product.variants.map(v => v.option1))];
          colors.forEach(color => {
            const btn = document.createElement("button");
            btn.textContent = color;
            btn.onclick = () => {
              document.querySelectorAll("#modal-colors button").forEach(b => b.classList.remove("active"));
              btn.classList.add("active");
              modalSizes.innerHTML = "";
              product.variants.filter(v => v.option1 === color).forEach(v => {
                const opt = document.createElement("option");
                opt.value = v.id;
                opt.textContent = v.option2 || "One Size";
                modalSizes.appendChild(opt);
              });
            };
            modalColors.appendChild(btn);
          });

          modal.classList.remove("hidden");
        });
    });
  });

  // Close modal
  document.querySelector(".modal-close").onclick = () => modal.classList.add("hidden");
  document.querySelector(".modal-overlay").onclick = () => modal.classList.add("hidden");

  // AJAX Add to Cart
  document.getElementById("add-to-cart-form").addEventListener("submit", e => {
    e.preventDefault();
    const formData = { id: modalSizes.value, quantity: 1 };
    fetch("/cart/add.js", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(formData)
    })
    .then(res => res.json())
    .then(() => {
      alert("Added to cart!");
      modal.classList.add("hidden");
    });
  });
});
</script>
